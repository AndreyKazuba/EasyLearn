<Window x:Class="EasyLearn.UI.AppWindow"
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:EasyLearn.UI"
        xmlns:converters="clr-namespace:EasyLearn.Infrastructure.ValueConverters"
        xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
        xmlns:i="http://schemas.microsoft.com/xaml/behaviors"
        mc:Ignorable="d"
        WindowStyle="None"
        WindowStartupLocation="CenterScreen"
        KeyDown="OnWindowKeyDown"
        Title="EasyLearn" Height="605" Width="890">

    <WindowChrome.WindowChrome>
        <WindowChrome CaptionHeight="36"/>
    </WindowChrome.WindowChrome>

    <Grid>
        <materialDesign:DrawerHost OpenMode="Standard" materialDesign:ShadowAssist.ShadowDepth="Depth0" BorderThickness="0" LeftDrawerBackground="{DynamicResource EasyGrayLight}">
            <materialDesign:DrawerHost.LeftDrawerContent>
                <StackPanel>

                    <Border Background="{DynamicResource MainColor}" Height="38" Margin="0 0 0 10" BorderBrush="{DynamicResource MainColor}">
                        <TextBlock Style="{DynamicResource MaterialDesignHeadline5TextBlock}"
                               Text="Easy Learn" Margin="18 1 0 0" FontWeight="Bold" Foreground="{DynamicResource EasyWhite}" />
                    </Border>
                    
                    <Button Margin="4" HorizontalAlignment="Left"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            Width="155"
                            Click="OnDrawerButtonClick"
                            Foreground="{DynamicResource MainColor}"
                            WindowChrome.IsHitTestVisibleInChrome="True"
                            HorizontalContentAlignment="Left">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"/>
                                <i:InvokeCommandAction Command="{Binding OpenDictationPageCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <materialDesign:PackIcon Kind="Pencil" Height="18" Width="18" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Text="Диктант" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10 0 0 0"/>
                        </StackPanel>
                    </Button>
                    <Button Margin="4" HorizontalAlignment="Left"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            Width="155"
                            Click="OnDrawerButtonClick"
                            Foreground="{DynamicResource MainColor}"
                            HorizontalContentAlignment="Left">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"/>
                                <i:InvokeCommandAction Command="{Binding OpenDictionariesPageCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <materialDesign:PackIcon Kind="Dictionary" Height="18" Width="18" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Text="Словари" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10 0 0 0"/>
                        </StackPanel>
                    </Button>
                    <Button Margin="4" HorizontalAlignment="Left"
                            Style="{DynamicResource MaterialDesignFlatButton}"
                            Width="155"
                            Click="OnDrawerButtonClick"
                            Foreground="{DynamicResource MainColor}"
                            HorizontalContentAlignment="Left">

                        <i:Interaction.Triggers>
                            <i:EventTrigger EventName="Click">
                                <i:InvokeCommandAction Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"/>
                                <i:InvokeCommandAction Command="{Binding OpenUsersPageCommand}"/>
                            </i:EventTrigger>
                        </i:Interaction.Triggers>

                        <StackPanel Orientation="Horizontal" HorizontalAlignment="Left">
                            <materialDesign:PackIcon Kind="User" Height="18" Width="18" VerticalAlignment="Center" HorizontalAlignment="Left"/>
                            <TextBlock Text="Пользователи" VerticalAlignment="Center" HorizontalAlignment="Center" Margin="10 0 0 0"/>
                        </StackPanel>
                    </Button>
                </StackPanel>
            </materialDesign:DrawerHost.LeftDrawerContent>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="Auto"/>
                    <RowDefinition/>
                </Grid.RowDefinitions>

                <materialDesign:ColorZone Mode="PrimaryDark"
                                          materialDesign:ShadowAssist.ShadowDepth="Depth0"
                                          Grid.Row="0" Background="{DynamicResource MainColor}">

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="38"/>
                            <ColumnDefinition Width="38"/>
                            <ColumnDefinition Width="38"/>
                            <ColumnDefinition/>
                            <ColumnDefinition Width="38"/>
                            <ColumnDefinition Width="38"/>
                            <ColumnDefinition Width="38"/>
                        </Grid.ColumnDefinitions>
                        <!--Кнопка активация главного меню слева-->

                        <Button Height="38" Width="38"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Padding="0"
                                Visibility="{Binding ShowMenuButtonIsVisible, Converter={converters:ReverseCollapseConverter}}"
                                Command="{x:Static materialDesign:DrawerHost.OpenDrawerCommand}"
                                CommandParameter="{x:Static Dock.Left}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding SetCloseMenuButtonCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}">
                                                    <materialDesign:PackIcon Kind="Menu" Height="33" Width="33" Foreground="{DynamicResource EasyWhite}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MainColorDark}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Height="38" Width="38"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Padding="0"
                                Visibility="{Binding CloseMenuButtonIsVisible, Converter={converters:ReverseCollapseConverter}}"
                                Command="{x:Static materialDesign:DrawerHost.CloseDrawerCommand}"
                                CommandParameter="{x:Static Dock.Left}">
                            <i:Interaction.Triggers>
                                <i:EventTrigger EventName="Click">
                                    <i:InvokeCommandAction Command="{Binding SetShowMenuButtonCommand}"/>
                                </i:EventTrigger>
                            </i:Interaction.Triggers>
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}">
                                                    <materialDesign:PackIcon Kind="Menu" Height="33" Width="33" Foreground="{DynamicResource EasyWhite}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MainColorDark}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Height="38" Width="38"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Padding="0"
                                Grid.Column="1"
                                Click="OnGoBackButtonClick"
                                Visibility="{Binding GoBackButtonIsVisible, Converter={converters:ReverseCollapseConverter}}">

                        <Button.Style>
                            <Style TargetType="Button">
                                <Setter Property="Template">
                                    <Setter.Value>
                                        <ControlTemplate TargetType="Button">
                                            <Border Background="{TemplateBinding Background}">
                                                    <materialDesign:PackIcon Kind="ArrowBottomLeftThin" Height="33" Width="33" Foreground="{DynamicResource EasyWhite}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"/>
                                            </Border>
                                        </ControlTemplate>
                                    </Setter.Value>
                                </Setter>
                                <Style.Triggers>
                                    <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MainColorDark}"/>
                                    </Trigger>
                                    <Trigger Property="IsMouseOver" Value="False">
                                        <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                                    </Trigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                        </Button>

                        <Button Height="38" Width="38"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Padding="0"
                                Grid.Column="2"
                                Click="OnOpenMenuButtonClick"
                                Visibility="{Binding GoBackButtonIsVisible, Converter={converters:ReverseCollapseConverter}}">

                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}">
                                                    <materialDesign:PackIcon Kind="DockTop" Height="28" Width="28" Foreground="{DynamicResource EasyWhite}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MainColorDark}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <Button Height="38" Width="38"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Grid.Column="4"
                                Padding="0"
                                Command="{Binding MinimizeCommand}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}">
                                                    <materialDesign:PackIcon Kind="WindowMinimize" Height="20" Width="20" Foreground="{DynamicResource EasyWhite}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MainColorDark}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Height="38" Width="38"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Grid.Column="5"
                                Padding="0"
                                Command="{Binding MaximizeCommand}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}">
                                                    <materialDesign:PackIcon Kind="CropSquare" Height="20" Width="20" Foreground="{DynamicResource EasyWhite}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource MainColorDark}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <Button Height="38" Width="38"
                                WindowChrome.IsHitTestVisibleInChrome="True"
                                Grid.Column="6"
                                Padding="0"
                                Command="{Binding CloseCommand}">
                            <Button.Style>
                                <Style TargetType="Button">
                                    <Setter Property="Template">
                                        <Setter.Value>
                                            <ControlTemplate TargetType="Button">
                                                <Border Background="{TemplateBinding Background}">
                                                    <materialDesign:PackIcon Kind="Close" Height="20" Width="20" Foreground="{DynamicResource EasyWhite}"
                                                     VerticalAlignment="Center"
                                                     HorizontalAlignment="Center"/>
                                                </Border>
                                            </ControlTemplate>
                                        </Setter.Value>
                                    </Setter>
                                    <Style.Triggers>
                                        <Trigger Property="IsMouseOver" Value="True">
                                            <Setter Property="Background" Value="{DynamicResource EasyRed}"/>
                                        </Trigger>
                                        <Trigger Property="IsMouseOver" Value="False">
                                            <Setter Property="Background" Value="{DynamicResource MainColor}"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </Grid>

                </materialDesign:ColorZone>
                <Border Grid.Row="1" BorderBrush="{DynamicResource MainColor}" BorderThickness="0.6 0 0.6 0.6">
                    <Frame JournalOwnership="UsesParentJournal"  Content="{Binding CurrentPage, Converter={converters:AppPageConverter}}"/>
                </Border>
            </Grid>
        </materialDesign:DrawerHost>
    </Grid>



</Window>
